{
  "openapi": "3.1.0",
  "info": {
    "title": "Ani",
    "description": "Ani API",
    "version": "1.0.0"
  },
  "externalDocs": {
    "url": "/"
  },
  "servers": [ {
    "url": "https://danmaku-global.myani.org/"
  } ],
  "tags": [ ],
  "paths": {
    "/v1/danmaku/{episodeId}": {
      "get": {
        "tags": [ "Danmaku" ],
        "summary": "获取弹幕",
        "description": "获取某一剧集内的弹幕，可指定某一时间范围及最大获取数量。",
        "operationId": "getDanmaku",
        "parameters": [ {
          "name": "episodeId",
          "in": "path",
          "description": "剧集 ID",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "maxCount",
          "in": "query",
          "description": "最大弹幕获取数量，默认为 8000",
          "required": false,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          }
        }, {
          "name": "fromTime",
          "in": "query",
          "description": "过滤范围开始时间，单位为毫秒，默认为 0",
          "required": false,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          }
        }, {
          "name": "toTime",
          "in": "query",
          "description": "过滤范围结束时间，单位为毫秒，默认为 -1；值为负数时表示不限制结束时间",
          "required": false,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          }
        } ],
        "responses": {
          "200": {
            "description": "成功获取内容",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DanmakuGetResponse"
                },
                "examples": {
                  "example": {
                    "value": {
                      "danmakuList": [ {
                        "id": "ba1f213a-50bd-4e09-a4e0-de6e24b72e22",
                        "senderId": "3db414d0-930a-4144-84cf-b841f486215e",
                        "danmakuInfo": {
                          "playTime": 0,
                          "color": -16777216,
                          "text": "Hello, world!",
                          "location": "NORMAL"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误",
            "headers": { }
          },
          "451": {
            "description": "请求弹幕数量过多。maxCount 参数传入值超过 8000 时会返回此错误。",
            "headers": { }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Danmaku" ],
        "summary": "发送弹幕",
        "description": "发送一条弹幕至某一剧集，可指定弹幕时间、内容、颜色和内容。需要用户登录。",
        "operationId": "postDanmaku",
        "parameters": [ {
          "name": "episodeId",
          "in": "path",
          "description": "剧集 ID",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "requestBody": {
          "description": "弹幕信息",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DanmakuPostRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "danmakuInfo": {
                      "playTime": 0,
                      "color": -16777216,
                      "text": "Hello, world!",
                      "location": "NORMAL"
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "弹幕发送成功",
            "headers": { }
          },
          "400": {
            "description": "请求参数错误",
            "headers": { }
          },
          "401": {
            "description": "未登录或用户 token 无效",
            "headers": { }
          },
          "441": {
            "description": "弹幕内容为空",
            "headers": { }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v1/me": {
      "get": {
        "tags": [ "User" ],
        "summary": "查看当前用户信息",
        "description": "查看当前携带的 token 对应用户的信息，包含其 Ani ID，Bangumi 昵称以及 Bangumi 头像 URL。",
        "operationId": "getUser",
        "parameters": [ ],
        "responses": {
          "200": {
            "description": "成功获取用户信息",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AniSelfUser"
                },
                "examples": {
                  "example": {
                    "value": {
                      "id": "762e10b5-37c2-4a2b-a39b-b3033a5979f8",
                      "nickname": "Him188",
                      "smallAvatar": "https://example.com/avatarSmall.jpg",
                      "mediumAvatar": "https://example.com/avatarMedium.jpg",
                      "largeAvatar": "https://example.com/avatarLarge.jpg",
                      "registerTime": 1714404248957,
                      "lastLoginTime": 1714404248957,
                      "clientVersion": "3.0.0-beta22",
                      "hasPassword": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "未登录或用户 token 无效",
            "headers": { }
          },
          "404": {
            "description": "用户 token 对应的用户不存在",
            "headers": { }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v1/updates/incremental": {
      "get": {
        "tags": [ "Updates" ],
        "summary": "获取可更新的版本号列表",
        "description": "返回所有大于当前版本的更新版本号。",
        "operationId": "getUpdates",
        "parameters": [ {
          "name": "clientVersion",
          "in": "query",
          "description": "客户端当前版本号。不合法的版本号会导致服务器返回 461 Invalid Client Version 错误。",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "clientPlatform",
          "in": "query",
          "description": "客户端平台，例：windows, android。不合法的值会导致服务器返回空的版本号列表。",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "clientArch",
          "in": "query",
          "description": "客户端架构，例：x86_64, aarch64。不合法的值会导致服务器返回空的版本号列表。",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "releaseClass",
          "in": "query",
          "description": "更新版本的发布类型，可选值：alpha, beta, rc, stable。不合法的发布类型会导致服务器返回 400 Bad Request 错误。",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "200": {
            "description": "成功获取内容",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseUpdatesResponse"
                },
                "examples": {
                  "example": {
                    "value": {
                      "versions": [ "3.0.0-rc01", "3.0.0-rc02", "3.0.0-rc03" ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误",
            "headers": { }
          },
          "461": {
            "description": "不合法的客户端版本号",
            "headers": { }
          }
        },
        "deprecated": false
      }
    },
    "/v1/updates/incremental/details": {
      "get": {
        "tags": [ "Updates" ],
        "summary": "获取可更新的版本详情",
        "description": "返回所有大于当前版本的更新版本的详细信息，包括版本号、下载地址、发布时间以及更新内容。",
        "operationId": "getDetailedUpdates",
        "parameters": [ {
          "name": "clientVersion",
          "in": "query",
          "description": "客户端当前版本号。不合法的版本号会导致服务器返回 461 Invalid Client Version 错误。",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "clientPlatform",
          "in": "query",
          "description": "客户端平台，例：windows, android。不合法的值会导致服务器返回空的版本号列表。",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "clientArch",
          "in": "query",
          "description": "客户端架构，例：x86_64, aarch64。不合法的值会导致服务器返回空的版本号列表。",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "releaseClass",
          "in": "query",
          "description": "更新版本的发布类型，可选值：alpha, beta, rc, stable。不合法的发布类型会导致服务器返回 400 Bad Request 错误。",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "200": {
            "description": "成功获取内容",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseUpdatesDetailedResponse"
                },
                "examples": {
                  "example": {
                    "value": {
                      "updates": [ {
                        "version": "3.0.0-rc01",
                        "downloadUrlAlternatives": [ "https://d.myani.org/v3.0.0-rc01/ani-3.0.0-rc01.apk" ],
                        "publishTime": 1716604732,
                        "description": "## 主要更新\n    - 重新设计资源选择器 #328\n       - 了解每个数据源的查询结果, 失败时点击重试 #327 #309\n       - 支持临时启用禁用数据源以应对未找到的情况\n       - 区分 BT 源和在线源并增加提示 #330\n    - 优化资源选择算法\n      - 默认隐藏生肉资源, 可在设置中恢复显示\n      - 支持番剧完结后隐藏单集 BT 资源, 默认启用, 可在设置关闭\n      - 支持优先选择季度全集资源 #304\n      - 自动优先选择本地缓存资源, 不再需要等待 #258 #260\n    ## 次要更新\n    - 提高弹幕匹配准确率 #338\n    - 自动选择数据源时不再覆盖偏好设置\n    - 自动选择数据源时不再保存不准确的字幕语言设置\n    - 在切换数据源时, 将会按顺序自动取消筛选直到显示列表不为空\n    - 在取消选择数据源的过滤时也记忆偏好设置\n    - 修复有时候选择资源时会崩溃的问题\n    - 优化数据源请求时的性能\n    - 修复标题过长挤掉按钮的问题 #311\n    - 修复会请求过多条目的问题\n    - 修复条目缓存页可能有资源泄露的问题 #190"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误",
            "headers": { }
          },
          "461": {
            "description": "不合法的客户端版本号",
            "headers": { }
          }
        },
        "deprecated": false
      }
    },
    "/v1/updates/latest": {
      "get": {
        "tags": [ "Updates" ],
        "summary": "获取最新版本下载链接",
        "description": "返回最新版本的下载链接及二维码及二维码，不包括版本更新信息。",
        "operationId": "getLatestVersion",
        "parameters": [ {
          "name": "releaseClass",
          "in": "query",
          "description": "版本的发布类型，可选值：alpha, beta, rc, stable，默认值为 stable。不合法的发布类型会导致服务器返回 400 Bad Request 错误。",
          "required": false,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "200": {
            "description": "成功获取内容",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestVersionInfo"
                },
                "examples": {
                  "example": {
                    "value": {
                      "version": "3.5.0",
                      "downloadUrlAlternativesMap": {
                        "android": [ "https://d.myani.org/v3.5.0/ani-3.5.0.apk", "https://mirror.ghproxy.com/?q=https://github.com/open-ani/ani/releases/download/v3.5.0/ani-3.5.0.apk" ],
                        "windows-x86_64": [ "https://d.myani.org/v3.5.0/ani-3.5.0-windows-x86_64.zip", "https://mirror.ghproxy.com/?q=https://github.com/open-ani/ani/releases/download/v3.5.0/ani-3.5.0-windows-x86_64.zip" ],
                        "macos-x86_64": [ "https://d.myani.org/v3.5.0/ani-3.5.0-macos-x86_64.dmg", "https://mirror.ghproxy.com/?q=https://github.com/open-ani/ani/releases/download/v3.5.0/ani-3.5.0-macos-x86_64.dmg" ],
                        "macos-aarch64": [ "https://d.myani.org/v3.5.0/ani-3.5.0-macos-aarch64.dmg", "https://mirror.ghproxy.com/?q=https://github.com/open-ani/ani/releases/download/v3.5.0/ani-3.5.0-macos-aarch64.dmg" ]
                      },
                      "publishTime": 1721869947,
                      "qrcodeUrls": [ "https://d.myani.org/v3.5.0/ani-3.5.0.apk.cloudflare.qrcode.png", "https://mirror.ghproxy.com/?q=https://github.com/open-ani/ani/releases/download/v3.5.0/ani-3.5.0.apk.cloudflare.qrcode.png", "https://d.myani.org/v3.5.0/ani-3.5.0.apk.github.qrcode.png", "https://mirror.ghproxy.com/?q=https://github.com/open-ani/ani/releases/download/v3.5.0/ani-3.5.0.apk.github.qrcode.png" ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "请求参数错误",
            "headers": { }
          }
        },
        "deprecated": false
      }
    },
    "/v1/login/bangumi": {
      "post": {
        "tags": [ "Bangumi OAuth" ],
        "summary": "使用 Bangumi token 登录",
        "description": "使用 Bangumi token 登录并获取用户会话 token。",
        "operationId": "bangumiLogin",
        "parameters": [ ],
        "requestBody": {
          "description": "Bangumi token 字符串以及客户端版本与平台架构信息。 clientOS参数可选值：`windows, macos, android, ios, linux, debian, ubuntu, redhat`；clientArch参数可选值：`aarch64, x86, x86_64`。",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BangumiLoginRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "bangumiToken": "VAcbHKhXqcjpCOVY5KFxwYEeQCOw4i0u",
                    "clientVersion": "3.0.0-beta24",
                    "clientOS": "android",
                    "clientArch": "aarch64"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "成功获取用户会话 token",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BangumiLoginResponse"
                },
                "examples": {
                  "example": {
                    "value": {
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJIZWxsbyB0aGVyZSJ9.TNpICIfOzK-BvxxV72ApTiD4SlAwvzHbu_0O3FXq-s4",
                      "user": {
                        "id": "762e10b5-37c2-4a2b-a39b-b3033a5979f8",
                        "nickname": "Him188",
                        "smallAvatar": "https://example.com/avatarSmall.jpg",
                        "mediumAvatar": "https://example.com/avatarMedium.jpg",
                        "largeAvatar": "https://example.com/avatarLarge.jpg",
                        "registerTime": 1714404248957,
                        "lastLoginTime": 1714404248957,
                        "clientVersion": "3.0.0-beta22",
                        "hasPassword": false
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Bangumi token 无效",
            "headers": { }
          },
          "461": {
            "description": "请求体中客户端版本无效",
            "headers": { }
          }
        },
        "deprecated": false
      }
    },
    "/v1/login/bangumi/oauth": {
      "get": {
        "tags": [ "Bangumi OAuth" ],
        "summary": "获取 Bangumi OAuth 授权链接",
        "description": "获取 Bangumi OAuth 授权链接，用于获取 Bangumi token。",
        "operationId": "getBangumiOauthUrl",
        "parameters": [ {
          "name": "requestId",
          "in": "query",
          "description": "唯一请求 ID，建议使用随机生成的 UUID",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          },
          "example": "123e4567-e89b-12d3-a456-426614174000"
        } ],
        "responses": {
          "302": {
            "description": "重定向到 Bangumi OAuth 授权页面",
            "headers": { }
          }
        },
        "deprecated": false
      }
    },
    "/v1/login/bangumi/oauth/callback": {
      "get": {
        "tags": [ "Bangumi OAuth" ],
        "summary": "Bangumi OAuth 回调",
        "description": "用于 Bangumi OAuth 授权回调，用户不应自行调用该接口。",
        "operationId": "bangumiOauthCallback",
        "parameters": [ {
          "name": "code",
          "in": "query",
          "description": "Bangumi OAuth 授权码",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          },
          "example": "7b5fc66fcea59f975d8c17322ae3b5cb1faa1799"
        }, {
          "name": "state",
          "in": "query",
          "description": "获取 OAuth 链接时提供的请求 ID",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          },
          "example": "123e4567-e89b-12d3-a456-426614174000"
        } ],
        "responses": {
          "200": {
            "description": "返回 Bangumi OAuth 授权结果网页",
            "headers": { }
          }
        },
        "deprecated": false
      }
    },
    "/v1/login/bangumi/oauth/token": {
      "get": {
        "tags": [ "Bangumi OAuth" ],
        "summary": "获取 Bangumi token",
        "description": "获取 Bangumi token，用于登录。",
        "operationId": "getBangumiToken",
        "parameters": [ {
          "name": "requestId",
          "in": "query",
          "description": "获取 OAuth 链接时提供的请求 ID",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          },
          "example": "123e4567-e89b-12d3-a456-426614174000"
        } ],
        "responses": {
          "200": {
            "description": "成功获取 Bangumi token",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BangumiUserToken"
                },
                "examples": {
                  "example": {
                    "value": {
                      "userId": 800001,
                      "expiresIn": 604800,
                      "accessToken": "2c1768b8c910735a2b4f1b06b233037418ccf490",
                      "refreshToken": "6f91bc748d8afe18e9dfe014a3da6340efcbaee2"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/login/bangumi/oauth/refresh": {
      "post": {
        "tags": [ "Bangumi OAuth" ],
        "summary": "刷新 Bangumi token",
        "description": "刷新 Bangumi token。",
        "operationId": "refreshBangumiToken",
        "parameters": [ ],
        "requestBody": {
          "description": "上次登录时提供的刷新 token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshBangumiTokenRequest"
              },
              "examples": {
                "example": {
                  "value": {
                    "refreshToken": "6f91bc748d8afe18e9dfe014a3da6340efcbaee2"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "成功刷新 Bangumi token",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymousBangumiUserToken"
                },
                "examples": {
                  "example": {
                    "value": {
                      "accessToken": "35a2b4f1b068ccf490b2c1768b8c910723303741",
                      "refreshToken": "dfe040e6f91bc748d8afe18e9fcbaee214a3da63",
                      "expiresIn": 604800
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "刷新 token 无效",
            "headers": { }
          }
        },
        "deprecated": false
      }
    },
    "/v1/trends": {
      "get": {
        "tags": [ "Trends" ],
        "summary": "获取热门排行",
        "description": "获取热门排行",
        "operationId": "getTrends",
        "parameters": [ ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trends"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/schedule/season/{seasonId}": {
      "get": {
        "tags": [ "Schedule" ],
        "summary": "获取一个季度的新番时间表",
        "description": "获取一个季度的新番时间表",
        "operationId": "getAnimeSeason",
        "parameters": [ {
          "name": "seasonId",
          "in": "path",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnimeSchedule"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/schedule/seasons": {
      "get": {
        "tags": [ "Schedule" ],
        "summary": "获取新番季度列表",
        "description": "获取新番季度列表",
        "operationId": "getAnimeSeasons",
        "parameters": [ ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnimeSeasonIdList"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/schedule/seasons/latest": {
      "get": {
        "tags": [ "Schedule" ],
        "summary": "获取最近几个季度的列表",
        "description": "获取最近几个季度的列表",
        "operationId": "getLatestAnimeSeasons",
        "parameters": [ ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatestAnimeSchedules"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/schedule/subjects": {
      "get": {
        "tags": [ "Schedule" ],
        "summary": "查询一些条目的连载信息",
        "description": "查询一些条目的连载信息",
        "operationId": "getSubjectRecurrences",
        "parameters": [ {
          "name": "ids",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int"
            },
            "title": "ArrayList<Int>"
          }
        } ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetSubjectRecurrenceResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/subs/proxy": {
      "get": {
        "tags": [ "Subscriptions" ],
        "summary": "获取订阅数据",
        "description": "获取订阅数据",
        "operationId": "proxy",
        "parameters": [ {
          "name": "url",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonElement"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/subject-relations/{subjectId}": {
      "get": {
        "tags": [ "Subject Relations" ],
        "summary": "获取关联条目",
        "description": "获取关联条目",
        "operationId": "getSubjectRelations",
        "parameters": [ {
          "name": "subjectId",
          "in": "path",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          }
        } ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectRelations"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v2/users/auth/email": {
      "post": {
        "tags": [ "User Authentication" ],
        "summary": "使用邮箱验证码登录或注册",
        "description": "使用邮箱验证码登录或注册",
        "operationId": "registerOrLoginByEmailOtp",
        "parameters": [ ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterOrLoginByEmailOtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "422": {
            "description": "验证码错误",
            "headers": { }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": { }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/users/auth/email/otp": {
      "post": {
        "tags": [ "User Authentication" ],
        "summary": "发送邮箱验证码",
        "description": "发送邮箱验证码",
        "operationId": "sendEmailOtp",
        "parameters": [ ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailOtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendOptResponse"
                }
              }
            }
          },
          "429": {
            "description": "请求太快",
            "headers": { }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/users/auth/password": {
      "put": {
        "tags": [ "User Authentication" ],
        "summary": "老用户设置密码. 只能设置一次, 之后要使用邮箱修改密码.",
        "description": "老用户设置密码. 只能设置一次, 之后要使用邮箱修改密码.",
        "operationId": "setPassword",
        "parameters": [ ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "422": {
            "description": "密码不符合要求",
            "headers": { }
          },
          "409": {
            "description": "密码已设置",
            "headers": { }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/users/bangumi/bind": {
      "get": {
        "tags": [ "Bangumi" ],
        "summary": "绑定 Bangumi 账号",
        "description": "绑定 Bangumi 账号",
        "operationId": "bind",
        "parameters": [ {
          "name": "requestId",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "os",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "arch",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "302": {
            "description": "Temporary redirect",
            "headers": { }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/users/bangumi/result": {
      "get": {
        "tags": [ "Bangumi" ],
        "summary": "获取登录结果",
        "description": "获取登录结果",
        "operationId": "getToken",
        "parameters": [ {
          "name": "requestId",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/users/bangumi/oauth": {
      "get": {
        "tags": [ "Bangumi" ],
        "summary": "获取 Bangumi OAuth 授权链接",
        "description": "获取 Bangumi OAuth 授权链接",
        "operationId": "oauth",
        "parameters": [ {
          "name": "requestId",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "os",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "arch",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "302": {
            "description": "Temporary redirect",
            "headers": { }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/users/bangumi/oauth/callback": {
      "get": {
        "tags": [ "Bangumi" ],
        "summary": "Bangumi OAuth 回调",
        "description": "Bangumi OAuth 回调",
        "operationId": "oauthCallback",
        "parameters": [ {
          "name": "code",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        }, {
          "name": "state",
          "in": "query",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "string",
            "title": "String"
          }
        } ],
        "responses": {
          "302": {
            "description": "Temporary redirect",
            "headers": { }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/pfrule": {
      "get": {
        "tags": [ "PeerFilterRule" ],
        "summary": "",
        "description": "",
        "operationId": "get",
        "parameters": [ ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeerFilterRule"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/subjects/bangumi/full-sync": {
      "post": {
        "tags": [ "Subjects" ],
        "summary": "Bangumi 全量同步",
        "description": "Bangumi 全量同步",
        "operationId": "bangumiFullSync",
        "parameters": [ ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "type": "null",
                  "title": "Unit"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/subjects/{subjectId}": {
      "get": {
        "tags": [ "Subjects" ],
        "summary": "获取单个条目信息. 如果已登录, 还会返回 collectionType 等字段.",
        "description": "获取单个条目信息. 如果已登录, 还会返回 collectionType 等字段.",
        "operationId": "getSubject",
        "parameters": [ {
          "name": "subjectId",
          "in": "path",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          }
        } ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectCollectionEntity"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      },
      "delete": {
        "tags": [ "Subjects" ],
        "summary": "删除自己的收藏",
        "description": "删除自己的收藏",
        "operationId": "deleteSubjectCollection",
        "parameters": [ {
          "name": "subjectId",
          "in": "path",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          }
        } ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "type": "null",
                  "title": "Unit"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      },
      "patch": {
        "tags": [ "Subjects" ],
        "summary": "编辑自己的收藏",
        "description": "编辑自己的收藏",
        "operationId": "updateSubjectCollection",
        "parameters": [ {
          "name": "subjectId",
          "in": "path",
          "description": "",
          "required": true,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          }
        } ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubjectCollectionRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "type": "null",
                  "title": "Unit"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    },
    "/v2/subjects/list": {
      "get": {
        "tags": [ "Subjects" ],
        "summary": "获取收藏的条目列表",
        "description": "获取收藏的条目列表",
        "operationId": "getSubjectCollections",
        "parameters": [ {
          "name": "offset",
          "in": "query",
          "description": "",
          "required": false,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          }
        }, {
          "name": "limit",
          "in": "query",
          "description": "",
          "required": false,
          "deprecated": false,
          "explode": false,
          "schema": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          }
        }, {
          "name": "type",
          "in": "query",
          "description": "",
          "required": false,
          "deprecated": false,
          "explode": false,
          "schema": {
            "$ref": "#/components/schemas/SubjectCollectionType"
          }
        } ],
        "responses": {
          "200": {
            "description": "Successful response",
            "headers": { },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [ {
          "auth-jwt": [ ]
        } ]
      }
    }
  },
  "components": {
    "schemas": {
      "DanmakuInfo": {
        "type": "object",
        "properties": {
          "playTime": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          },
          "color": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "text": {
            "type": "string",
            "title": "String"
          },
          "location": {
            "$ref": "#/components/schemas/DanmakuLocation"
          }
        },
        "required": [ "color", "location", "playTime", "text" ],
        "title": "DanmakuInfo"
      },
      "DanmakuLocation": {
        "type": "string",
        "enum": [ "TOP", "BOTTOM", "NORMAL" ],
        "title": "DanmakuLocation"
      },
      "DanmakuPostRequest": {
        "type": "object",
        "properties": {
          "danmakuInfo": {
            "$ref": "#/components/schemas/DanmakuInfo"
          }
        },
        "required": [ "danmakuInfo" ],
        "title": "DanmakuPostRequest"
      },
      "Danmaku": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "String"
          },
          "senderId": {
            "type": "string",
            "title": "String"
          },
          "danmakuInfo": {
            "$ref": "#/components/schemas/DanmakuInfo"
          }
        },
        "required": [ "danmakuInfo", "id", "senderId" ],
        "title": "Danmaku"
      },
      "DanmakuGetResponse": {
        "type": "object",
        "properties": {
          "danmakuList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Danmaku"
            },
            "title": "ArrayList<Danmaku>"
          }
        },
        "required": [ "danmakuList" ],
        "title": "DanmakuGetResponse"
      },
      "AniSelfUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "String"
          },
          "email": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "nickname": {
            "type": "string",
            "title": "String"
          },
          "smallAvatar": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "mediumAvatar": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "largeAvatar": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "registerTime": {
            "type": [ "null", "integer" ],
            "format": "int64",
            "title": "Long"
          },
          "lastLoginTime": {
            "type": [ "null", "integer" ],
            "format": "int64",
            "title": "Long"
          },
          "clientVersion": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "hasPassword": {
            "type": "boolean",
            "title": "Boolean"
          }
        },
        "required": [ "hasPassword", "id", "nickname" ],
        "title": "AniSelfUser"
      },
      "ReleaseUpdatesResponse": {
        "type": "object",
        "properties": {
          "versions": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String"
            },
            "title": "ArrayList<String>"
          }
        },
        "required": [ "versions" ],
        "title": "ReleaseUpdatesResponse"
      },
      "UpdateInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "title": "String"
          },
          "downloadUrlAlternatives": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String"
            },
            "title": "ArrayList<String>"
          },
          "publishTime": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          },
          "description": {
            "type": "string",
            "title": "String"
          }
        },
        "required": [ "description", "downloadUrlAlternatives", "publishTime", "version" ],
        "title": "UpdateInfo"
      },
      "ReleaseUpdatesDetailedResponse": {
        "type": "object",
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateInfo"
            },
            "title": "ArrayList<UpdateInfo>"
          }
        },
        "required": [ "updates" ],
        "title": "ReleaseUpdatesDetailedResponse"
      },
      "LatestVersionInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "title": "String"
          },
          "downloadUrlAlternativesMap": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "title": "String"
              },
              "title": "ArrayList<String>"
            },
            "title": "LinkedHashMap<String,ArrayList<String>>"
          },
          "publishTime": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          },
          "qrcodeUrls": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String"
            },
            "title": "ArrayList<String>"
          }
        },
        "required": [ "downloadUrlAlternativesMap", "publishTime", "qrcodeUrls", "version" ],
        "title": "LatestVersionInfo"
      },
      "BangumiLoginRequest": {
        "type": "object",
        "properties": {
          "bangumiToken": {
            "type": "string",
            "title": "String"
          },
          "clientVersion": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "clientOS": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "clientArch": {
            "type": [ "null", "string" ],
            "title": "String"
          }
        },
        "required": [ "bangumiToken" ],
        "title": "BangumiLoginRequest"
      },
      "BangumiLoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "title": "String"
          },
          "user": {
            "$ref": "#/components/schemas/AniSelfUser"
          }
        },
        "required": [ "token", "user" ],
        "title": "BangumiLoginResponse"
      },
      "BangumiUserToken": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          },
          "accessToken": {
            "type": "string",
            "title": "String"
          },
          "refreshToken": {
            "type": "string",
            "title": "String"
          }
        },
        "required": [ "accessToken", "expiresIn", "refreshToken", "userId" ],
        "title": "BangumiUserToken"
      },
      "RefreshBangumiTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "title": "String"
          }
        },
        "required": [ "refreshToken" ],
        "title": "RefreshBangumiTokenRequest"
      },
      "AnonymousBangumiUserToken": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "title": "String"
          },
          "refreshToken": {
            "type": "string",
            "title": "String"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          }
        },
        "required": [ "accessToken", "expiresIn", "refreshToken" ],
        "title": "AnonymousBangumiUserToken"
      },
      "TrendingSubject": {
        "type": "object",
        "properties": {
          "bangumiId": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "nameCn": {
            "type": "string",
            "title": "String"
          },
          "imageLarge": {
            "type": "string",
            "title": "String"
          }
        },
        "required": [ "bangumiId", "imageLarge", "nameCn" ],
        "title": "TrendingSubject"
      },
      "Trends": {
        "type": "object",
        "properties": {
          "trendingSubjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrendingSubject"
            },
            "title": "ArrayList<TrendingSubject>"
          }
        },
        "required": [ "trendingSubjects" ],
        "title": "Trends"
      },
      "AnimeSeasonId": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "season": {
            "$ref": "#/components/schemas/AnimeSeason"
          },
          "id": {
            "type": "string",
            "title": "String"
          }
        },
        "required": [ "id", "season", "year" ],
        "title": "AnimeSeasonId"
      },
      "AnimeSeason": {
        "type": "string",
        "enum": [ "WINTER", "SPRING", "SUMMER", "AUTUMN" ],
        "title": "AnimeSeason"
      },
      "OnAirAnimeInfo": {
        "type": "object",
        "properties": {
          "bangumiId": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "name": {
            "type": "string",
            "title": "String"
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String"
            },
            "title": "ArrayList<String>"
          },
          "begin": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "recurrence": {
            "oneOf": [ {
              "type": "null"
            }, {
              "$ref": "#/components/schemas/AnimeRecurrence"
            } ]
          },
          "end": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "mikanId": {
            "type": [ "null", "integer" ],
            "format": "int32",
            "title": "Int"
          }
        },
        "required": [ "aliases", "bangumiId", "name" ],
        "title": "OnAirAnimeInfo"
      },
      "AnimeRecurrence": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "title": "String"
          },
          "intervalMillis": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          }
        },
        "required": [ "intervalMillis", "startTime" ],
        "title": "AnimeRecurrence"
      },
      "AnimeSchedule": {
        "type": "object",
        "properties": {
          "seasonId": {
            "$ref": "#/components/schemas/AnimeSeasonId"
          },
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OnAirAnimeInfo"
            },
            "title": "ArrayList<OnAirAnimeInfo>"
          }
        },
        "required": [ "list", "seasonId" ],
        "title": "AnimeSchedule"
      },
      "AnimeSeasonIdList": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnimeSeasonId"
            },
            "title": "ArrayList<AnimeSeasonId>"
          }
        },
        "required": [ "list" ],
        "title": "AnimeSeasonIdList"
      },
      "LatestAnimeSchedules": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnimeSchedule"
            },
            "title": "ArrayList<AnimeSchedule>"
          }
        },
        "required": [ "list" ],
        "title": "LatestAnimeSchedules"
      },
      "BatchGetSubjectRecurrenceResponse": {
        "type": "object",
        "properties": {
          "recurrences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnimeRecurrence"
            },
            "title": "ArrayList<AnimeRecurrence>"
          }
        },
        "required": [ "recurrences" ],
        "title": "BatchGetSubjectRecurrenceResponse"
      },
      "JsonElement": {
        "type": "object",
        "properties": { },
        "title": "JsonElement"
      },
      "SubjectRelations": {
        "type": "object",
        "properties": {
          "subjectId": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "seriesMainSubjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int"
            },
            "title": "ArrayList<Int>"
          },
          "sequelSubjects": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "title": "Int"
            },
            "title": "ArrayList<Int>"
          }
        },
        "required": [ "sequelSubjects", "seriesMainSubjectIds", "subjectId" ],
        "title": "SubjectRelations"
      },
      "RegisterOrLoginByEmailOtpRequest": {
        "type": "object",
        "properties": {
          "otpId": {
            "type": "string",
            "title": "String"
          },
          "otpValue": {
            "type": "string",
            "title": "String"
          }
        },
        "required": [ "otpId", "otpValue" ],
        "title": "RegisterOrLoginByEmailOtpRequest"
      },
      "Success": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "String"
          },
          "tokens": {
            "$ref": "#/components/schemas/AniTokens"
          },
          "user": {
            "$ref": "#/components/schemas/AniSelfUser"
          }
        },
        "required": [ "tokens", "user", "userId" ],
        "title": "Success"
      },
      "AniTokens": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "title": "String"
          },
          "expiresAtMillis": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          },
          "bangumiAccessToken": {
            "type": [ "null", "string" ],
            "title": "String"
          }
        },
        "required": [ "accessToken", "expiresAtMillis" ],
        "title": "AniTokens"
      },
      "RegisterErrors": {
        "type": "string",
        "enum": [ "INVALID_PASSWORD", "USERNAME_ALREADY_EXIST", "INVALID_USERNAME" ],
        "title": "RegisterErrors"
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [ {
              "type": "null"
            }, {
              "$ref": "#/components/schemas/Success"
            } ]
          },
          "error": {
            "oneOf": [ {
              "type": "null"
            }, {
              "$ref": "#/components/schemas/RegisterErrors"
            } ]
          }
        },
        "title": "AuthenticationResponse"
      },
      "EmailLanguage": {
        "type": "string",
        "enum": [ "EN", "ZH_HANS", "ZH_HANT" ],
        "title": "EmailLanguage"
      },
      "SendEmailOtpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "title": "String"
          },
          "language": {
            "$ref": "#/components/schemas/EmailLanguage"
          }
        },
        "required": [ "email" ],
        "title": "SendEmailOtpRequest"
      },
      "SendOptResponse": {
        "type": "object",
        "properties": {
          "otpId": {
            "type": "string",
            "title": "String"
          }
        },
        "required": [ "otpId" ],
        "title": "SendOptResponse"
      },
      "SetPasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "title": "String"
          }
        },
        "required": [ "password" ],
        "title": "SetPasswordRequest"
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "title": "String"
          },
          "tokens": {
            "$ref": "#/components/schemas/AniTokens"
          },
          "user": {
            "$ref": "#/components/schemas/AniSelfUser"
          }
        },
        "required": [ "tokens", "user", "userId" ],
        "title": "LoginResponse"
      },
      "PeerFilterRule": {
        "type": "object",
        "properties": {
          "blockedIpPattern": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String"
            },
            "title": "ArrayList<String>"
          },
          "blockedIdRegex": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String"
            },
            "title": "ArrayList<String>"
          },
          "blockedClientRegex": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String"
            },
            "title": "ArrayList<String>"
          }
        },
        "required": [ "blockedClientRegex", "blockedIdRegex", "blockedIpPattern" ],
        "title": "PeerFilterRule"
      },
      "InfoboxEntity": {
        "type": "object",
        "properties": {
          "template": {
            "type": "string",
            "title": "String"
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "title": "String"
            },
            "title": "LinkedHashMap<String,String>"
          }
        },
        "required": [ "fields", "template" ],
        "title": "InfoboxEntity"
      },
      "FavouriteEntity": {
        "type": "object",
        "properties": {
          "wish": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "done": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "doing": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "onHold": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "dropped": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          }
        },
        "required": [ "doing", "done", "dropped", "onHold", "wish" ],
        "title": "FavouriteEntity"
      },
      "TagEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "String"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          }
        },
        "required": [ "count", "name" ],
        "title": "TagEntity"
      },
      "SubjectCollectionType": {
        "type": "string",
        "enum": [ "WISH", "DONE", "DOING", "ON_HOLD", "DROPPED" ],
        "title": "SubjectCollectionType"
      },
      "SubjectCollectionEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          },
          "type": {
            "type": "integer",
            "format": "int32",
            "title": "Int"
          },
          "name": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "nameCn": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "infobox": {
            "oneOf": [ {
              "type": "null"
            }, {
              "$ref": "#/components/schemas/InfoboxEntity"
            } ]
          },
          "platform": {
            "type": [ "null", "integer" ],
            "format": "int32",
            "title": "Int"
          },
          "summary": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "nsfw": {
            "type": [ "null", "boolean" ],
            "title": "Boolean"
          },
          "date": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "favorite": {
            "oneOf": [ {
              "type": "null"
            }, {
              "$ref": "#/components/schemas/FavouriteEntity"
            } ]
          },
          "series": {
            "type": [ "null", "boolean" ],
            "title": "Boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagEntity"
            },
            "title": "ArrayList<TagEntity>"
          },
          "metaTags": {
            "type": "array",
            "items": {
              "type": "string",
              "title": "String"
            },
            "title": "ArrayList<String>"
          },
          "score": {
            "type": [ "null", "string" ],
            "title": "String"
          },
          "scoreDetails": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32",
              "title": "Int"
            },
            "title": "LinkedHashMap<String,Int>"
          },
          "rank": {
            "type": [ "null", "integer" ],
            "format": "int32",
            "title": "Int"
          },
          "collectionType": {
            "oneOf": [ {
              "type": "null"
            }, {
              "$ref": "#/components/schemas/SubjectCollectionType"
            } ]
          }
        },
        "required": [ "id", "metaTags", "scoreDetails", "tags", "type" ],
        "title": "SubjectCollectionEntity"
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int64",
            "title": "Long"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubjectCollectionEntity"
            },
            "title": "ArrayList<SubjectCollectionEntity>"
          }
        },
        "required": [ "items", "total" ],
        "title": "PaginatedResponse"
      },
      "UpdateSubjectCollectionRequest": {
        "type": "object",
        "properties": {
          "collectionType": {
            "oneOf": [ {
              "type": "null"
            }, {
              "$ref": "#/components/schemas/SubjectCollectionType"
            } ]
          }
        },
        "title": "UpdateSubjectCollectionRequest"
      }
    },
    "examples": { },
    "securitySchemes": {
      "auth-jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "webhooks": { }
}
