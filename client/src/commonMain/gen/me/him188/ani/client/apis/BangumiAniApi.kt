/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package me.him188.ani.client.apis

import me.him188.ani.client.models.AniLoginResponse

import me.him188.ani.client.infrastructure.*
import io.ktor.client.HttpClient
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import kotlinx.serialization.json.Json
import io.ktor.http.ParametersBuilder
import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

open class BangumiAniApi : ApiClient {

    constructor(
        baseUrl: String = ApiClient.BASE_URL,
        httpClientEngine: HttpClientEngine? = null,
        httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
        jsonSerializer: Json = ApiClient.JSON_DEFAULT
    ) : super(
        baseUrl = baseUrl,
        httpClientEngine = httpClientEngine,
        httpClientConfig = httpClientConfig,
        jsonBlock = jsonSerializer,
    )

    constructor(
        baseUrl: String,
        httpClient: HttpClient
    ) : super(baseUrl = baseUrl, httpClient = httpClient)

    /**
     * 绑定 Bangumi 账号
     * 绑定 Bangumi 账号
     * @param requestId
     * @param os
     * @param arch 
     * @return void
     */
    open suspend fun bind(requestId: kotlin.String, os: kotlin.String, arch: kotlin.String): HttpResponse<Unit> {

        val localVariableAuthNames = listOf<String>("auth-jwt")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        requestId?.apply { localVariableQuery["requestId"] = listOf("$requestId") }
        os?.apply { localVariableQuery["os"] = listOf("$os") }
        arch?.apply { localVariableQuery["arch"] = listOf("$arch") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v2/users/bangumi/bind",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames,
        ).wrap()
    }


    /**
     * 获取登录结果
     * 获取登录结果
     * @param requestId 
     * @return AniLoginResponse
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getToken(requestId: kotlin.String): HttpResponse<AniLoginResponse> {

        val localVariableAuthNames = listOf<String>("auth-jwt")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        requestId?.apply { localVariableQuery["requestId"] = listOf("$requestId") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v2/users/bangumi/result",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames,
        ).wrap()
    }


    /**
     * 获取 Bangumi OAuth 授权链接
     * 获取 Bangumi OAuth 授权链接
     * @param requestId
     * @param os
     * @param arch 
     * @return void
     */
    open suspend fun oauth(requestId: kotlin.String, os: kotlin.String, arch: kotlin.String): HttpResponse<Unit> {

        val localVariableAuthNames = listOf<String>("auth-jwt")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        requestId?.apply { localVariableQuery["requestId"] = listOf("$requestId") }
        os?.apply { localVariableQuery["os"] = listOf("$os") }
        arch?.apply { localVariableQuery["arch"] = listOf("$arch") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v2/users/bangumi/oauth",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames,
        ).wrap()
    }


    /**
     * Bangumi OAuth 回调
     * Bangumi OAuth 回调
     * @param code
     * @param state 
     * @return void
     */
    open suspend fun oauthCallback(code: kotlin.String, state: kotlin.String): HttpResponse<Unit> {

        val localVariableAuthNames = listOf<String>("auth-jwt")

        val localVariableBody = 
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        code?.apply { localVariableQuery["code"] = listOf("$code") }
        state?.apply { localVariableQuery["state"] = listOf("$state") }
        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/v2/users/bangumi/oauth/callback",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames,
        ).wrap()
    }


}
