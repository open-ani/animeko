/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package me.him188.ani.datasources.bangumi.next.models


import kotlinx.serialization.*

/**
 * 条目排序方式   - rank = 排名   - trends = 热度   - collects = 收藏数   - date = 发布日期   - title = 标题
 *
 * Values: Rank,Trends,Collects,Date,Title
 */
@Serializable
enum class BangumiNextSubjectSort(val value: kotlin.String) {

    @SerialName(value = "rank")
    Rank("rank"),

    @SerialName(value = "trends")
    Trends("trends"),

    @SerialName(value = "collects")
    Collects("collects"),

    @SerialName(value = "date")
    Date("date"),

    @SerialName(value = "title")
    Title("title");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is BangumiNextSubjectSort) "$data" else null

        /**
         * Returns a valid [BangumiNextSubjectSort] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): BangumiNextSubjectSort? = data?.let {
            val normalizedData = "$it".lowercase()
            values().firstOrNull { value ->
                it == value || normalizedData == "$value".lowercase()
            }
        }
    }
}

